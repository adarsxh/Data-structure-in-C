#include<iostream>
#include<bits/stdc++.h>
#include<stack>
using namespace std;

struct node{
	int key;
	node *right;
	node *left;
	node(int x){
		key = x;
		right = NULL;
		left = NULL;
	}
	
};
void inorder(node *root){
	if(root!=NULL){
		inorder(root->left);
		cout<<root->key<<" ";
		inorder(root->right);
	}
}

void preorder(node *root){
	if(root!=NULL){
		cout<<(root->key)<<" ";
		preorder(root->left);
		preorder(root->right);
	}
}
void postorder(node *root){
	if(root!=NULL){
		postorder(root->left);
		postorder(root->right);
		cout<<(root->key)<<" ";
	}
}
int getsize(node *root){
	if(root==NULL)
		return 0;
	else
		return(1+getsize(root->left)+getsize(root->right));
}
int getmax(node *root){
	if(root==NULL)
		return INT_MIN;
	else
		return(max(max(getmax(root->left), getmax(root->right)),root->key));
}

int getheight(node *root){
	if(root==NULL)
		return 0;
	else{
		return(max(getheight(root->left),getheight(root->right))+1);
	}
}
int main(){
	node *root = new node(10);
	root->left = new node(20);
	root->right = new node (30);
	root->right->left = new node(40);
	root->right->right = new node(50);
	cout<<"inorder:\t";
	inorder(root);
	cout<<"preorder:\t";
	preorder(root);
	cout<<"postorder:\t";
	postorder(root);
	cout<<endl;
	cout<<"size: "<<getsize(root)<<" ";
	cout<<endl;
	cout<<"max: "<<getmax(root)<<endl;
	cout<<"height: "<<getheight(root)<<endl;
}

